services:
    dev:
        container_name: server-dev
        build:
            context: .
            target: development
            dockerfile: ./Dockerfile
        command: npm run start:dev
        ports:
            - 8080:80
            - 3000:3000
        tty: true
        volumes:
            - .:/usr/src/app
            - /usr/src/app/node_modules
            - ssh-data:/root/.ssh
        networks:
            - server-network
        environment:
            MONGO_DOMAIN: mongodb
    mongodb:
        image: mongo
        container_name: server-mongodb
        environment:
            - MONGO_INITDB_ROOT_USERNAME=root
            - MONGO_INITDB_ROOT_PASSWORD=rootpw
        volumes:
            - mongodb-data:/data/db
        networks:
            - server-network
        ports:
            - 27017:27017
        healthcheck:
            test: echo 'db.runCommand("ping").ok' | mongo localhost:27017/sales --quiet
            interval: 30s
            timeout: 10s
            retries: 3
        restart: unless-stopped
    mongo-express:
        image: mongo-express
        container_name: server-mongo-express
        environment:
            - ME_CONFIG_MONGODB_SERVER=mongodb
            - ME_CONFIG_MONGODB_ENABLE_ADMIN=true
            - ME_CONFIG_MONGODB_ADMINUSERNAME=root
            - ME_CONFIG_MONGODB_ADMINPASSWORD=rootpw
            - ME_CONFIG_BASICAUTH_USERNAME=admin
            - ME_CONFIG_BASICAUTH_PASSWORD=adminpw
        depends_on:
            - mongodb
        networks:
            - server-network
        ports:
            - 8081:8081
        healthcheck:
            test: wget --quiet --tries=3 --spider http://admin:adminpw@localhost:8081 || exit 1
            interval: 30s
            timeout: 10s
            retries: 3
        restart: unless-stopped
volumes:
    mongodb-data:
        name: mongodb-data
    ssh-data:
        name: ssh-data

networks:
    server-network:
